(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{H5tA:function(e,t,n){"use strict";n.r(t),n.d(t,"_frontmatter",(function(){return b})),n.d(t,"default",(function(){return s}));var o=n("Fcif"),a=n("dV/x"),i=(n("mXGw"),n("/FXl")),l=n("TjRS");n("aD51");const c=["components"],b={};void 0!==b&&b&&b===Object(b)&&Object.isExtensible(b)&&!Object.prototype.hasOwnProperty.call(b,"__filemeta")&&Object.defineProperty(b,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"src/components/tooltip.mdx"}});const r={_frontmatter:b},p=l.a;function s(e){let{components:t}=e,n=Object(a.a)(e,c);return Object(i.b)(p,Object(o.a)({},r,n,{components:t,mdxType:"MDXLayout"}),Object(i.b)("h1",{id:"tooltip"},"Tooltip"),Object(i.b)("p",null,"Documentation and examples for adding custom tooltips with CSS and JavaScript using CSS3 for animations."),Object(i.b)("div",{className:"box black"},Object(i.b)("strong",null,"Attention"),": the use of the components needs the ",Object(i.b)("span",{className:"pink"},"squid.js")," included in the project"),Object(i.b)("div",{className:"box black"},Object(i.b)("strong",null,"Attention + 1"),": Probably the interaction via Javascript should not work well in SPA applications (independent of the framework React, Angular, Vuejs, etc). For now we have no implementation but we will create in the future, for now just use the styles and create your own implementation"),Object(i.b)("h2",{id:"light"},"Light"),Object(i.b)("div",{className:"button button-pink display-inline-block","data-tooltip-theme":"light","data-tooltip":"Hello World!"},"Mouse Over Here"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-html"},"<div\n  data-tooltip='Some Text'\n  data-tooltip-theme='light'\n>\n  \x3c!-- HTML CONTENT --\x3e\n</div>\n")),Object(i.b)("h2",{id:"dark"},"Dark"),Object(i.b)("div",{className:"button button-pink display-inline-block","data-tooltip":"Hello World!"},"Mouse Over Here"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-html"},"<div\n  data-tooltip='Some Text'\n>\n  \x3c!-- HTML CONTENT --\x3e\n</div>\n")),Object(i.b)("h3",{id:"attributes"},"Attributes"),Object(i.b)("h2",{id:"trigger"},"Trigger"),Object(i.b)("p",null,"The attribute ",Object(i.b)("inlineCode",{parentName:"p"},"data-tooltip-trigger")," accept ",Object(i.b)("inlineCode",{parentName:"p"},"click")," value. To use mouseover just leave it empty"),Object(i.b)("h2",{id:"position"},"Position"),Object(i.b)("p",null,"The attribute ",Object(i.b)("inlineCode",{parentName:"p"},"data-tooltip-position")," accept:"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre"},"right top\nright center\nright bottom\ncenter top\ncenter center\ncenter bottom\nleft top\nleft center\nleft bottom\n")),Object(i.b)("h2",{id:"theme"},"Theme"),Object(i.b)("p",null,"The attribute ",Object(i.b)("inlineCode",{parentName:"p"},"data-tooltip-theme")," accept ",Object(i.b)("inlineCode",{parentName:"p"},"dark")," (or empty) and ",Object(i.b)("inlineCode",{parentName:"p"},"light")," values"))}void 0!==s&&s&&s===Object(s)&&Object.isExtensible(s)&&!Object.prototype.hasOwnProperty.call(s,"__filemeta")&&Object.defineProperty(s,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"src/components/tooltip.mdx"}}),s.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-components-tooltip-mdx-260e77215606e567b772.js.map