{"version":3,"sources":["webpack:///../src/forms/input.mdx"],"names":["_frontmatter","Object","isExtensible","prototype","hasOwnProperty","call","defineProperty","configurable","value","name","filename","layoutProps","MDXLayout","DefaultLayout","MDXContent","_ref","components","props","_objectWithoutProperties","mdx","_extends","mdxType","parentName","className","htmlFor","type","id","placeholder","required","readOnly","disabled","isMDXComponent"],"mappings":"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","file":"component---src-forms-input-mdx-c3b670d97599655d5133.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/home/runner/work/css/css/src/docs/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"input\"\n    }}>{`Input`}</h1>\n    <p>{`The text input and its variations.`}</p>\n    <p>{`Basically it's a HTML `}<inlineCode parentName=\"p\">{`input`}</inlineCode>{` element with `}<inlineCode parentName=\"p\">{`input`}</inlineCode>{` class. So all attributes it's comming for a regular HTML element.`}</p>\n    <h2 {...{\n      \"id\": \"basic-example\"\n    }}>{`Basic Example`}</h2>\n  <div className='col-sm-24 col-md-12 col-lg-8'>\n    <label className='display-block' htmlFor='input-text-1'>\n      Label\n    </label>\n    <div className='wrapper-input mb-3'>\n      <input className='display-block input' type='text' name='input-text' id='input-text-1' placeholder='Placeholder' />\n    </div>\n  </div>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-html\"\n      }}>{`  <div class='col-24'>\n    <label class='display-block' for='input-text'>\n      Label\n    </label>\n    <div class='wrapper-input mb-3'>\n      <input\n        class='display-block input'\n        type='text'\n        name='input-text'\n        id='input-text'\n        placeholder='Placeholder'\n      />\n    </div>\n  </div>\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"labeled\"\n    }}>{`Labeled`}</h2>\n    <p>{`Place a label or button in any side of an input. You may also place on both sides. Inside `}<inlineCode parentName=\"p\">{`wrapper-input`}</inlineCode>{` just add a label or button with `}<inlineCode parentName=\"p\">{`input-group-text`}</inlineCode>{`.`}</p>\n  <div className='col-sm-24 col-md-12 col-lg-8'>\n    <label className='display-block' htmlFor='input-text-icon-3'>\n      Label\n    </label>\n    <div className='wrapper-input mb-3'>\n      <span className='input-group-text'>\n        R$\n      </span>\n      <input className='display-block input' type='number' name='input-text-icon-3' id='input-text-icon-3' placeholder='XX' />\n      <button className='button button-pink input-group-text'>\n        <i className=\"fas fa-check\"></i>\n      </button>\n    </div>\n  </div>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-html\"\n      }}>{`  <div class='col-sm-24 col-md-12 col-lg-8'>\n    <label class='display-block' for='input-text-icon-4'>\n      Label\n    </label>\n    <div class='wrapper-input mb-3'>\n      <span\n        class='input-group-text'\n      >\n        R$\n      </span>\n      <input\n        class='display-block input'\n        type='number'\n        name='input-text-icon-4'\n        id='input-text-icon-4'\n        placeholder='XX'\n      />\n      <button\n        class='button button-pink input-group-text'\n      >\n        <i class=\"fas fa-check\"></i>\n      </button>\n    </div>\n  </div>\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"error\"\n    }}>{`Error`}</h2>\n    <p>{`An input field can show the data contains errors. Add `}<inlineCode parentName=\"p\">{`error`}</inlineCode>{` class on input and a element with `}<inlineCode parentName=\"p\">{`box-validation box-invalid`}</inlineCode>{` below `}<inlineCode parentName=\"p\">{`wrapper-input`}</inlineCode>{` in case of error message is need it.`}</p>\n  <div className='col-sm-24 col-md-12 col-lg-8'>\n    <label className='display-block' htmlFor='input-text-error'>\n      Label\n    </label>\n    <div className='wrapper-input'>\n      <input className='display-block input error' type='text' name='input-text-error' id='input-text-error' placeholder='Placeholder' required />\n    </div>\n    <div className='box-validation box-invalid show mb-3'>\n      <i className=\"fas fa-exclamation-triangle\"></i>Error\n    </div>\n  </div>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-html\"\n      }}>{`  <div class='col-24'>\n    <label class='display-block' for='input-text-error'>\n      Label\n    </label>\n    <div class='wrapper-input'>\n      <input\n        class='display-block input error'\n        type='text'\n        name='input-text-error'\n        id='input-text-error'\n        placeholder='Placeholder'\n        required\n      />\n    </div>\n    <div class='box-validation box-invalid show mb-3'>\n      <i class=\"fas fa-exclamation-triangle\"></i>Error\n    </div>\n  </div>\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"valid\"\n    }}>{`Valid`}</h2>\n    <p>{`An input field can show that it is valid. Add `}<inlineCode parentName=\"p\">{`valid`}</inlineCode>{` class on input and a element with `}<inlineCode parentName=\"p\">{`box-validation box-valid`}</inlineCode>{` below `}<inlineCode parentName=\"p\">{`wrapper-input`}</inlineCode>{` in case of a valid message is need it.`}</p>\n  <div className='col-sm-24 col-md-12 col-lg-8'>\n    <label className='display-block' htmlFor='input-text-valid'>\n      Label\n    </label>\n    <div className='wrapper-input'>\n      <input className='display-block input valid' type='text' name='input-text-valid' id='input-text-valid' placeholder='Placeholder' />\n    </div>\n    <div className='box-validation box-valid show mb-3'>\n      <i className=\"fas fa-check-circle\"></i>Valid\n    </div>\n  </div>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-html\"\n      }}>{`  <div class='col-24'>\n    <label class='display-block' for='input-text-valid'>\n      Label\n    </label>\n    <div class='wrapper-input'>\n      <input\n        class='display-block input valid'\n        type='text'\n        name='input-text-valid'\n        id='input-text-valid'\n        placeholder='Placeholder'\n      />\n    </div>\n    <div class='box-validation box-valid show mb-3'>\n      <i class=\"fas fa-check-circle\"></i>Valid\n    </div>\n  </div>\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"readonly\"\n    }}>{`Readonly`}</h2>\n    <p>{`An input field can show that it is readonly. Add `}<inlineCode parentName=\"p\">{`readonly`}</inlineCode>{` attribute/class on input.`}</p>\n  <div className='col-sm-24 col-md-12 col-lg-8'>\n    <label className='display-block' htmlFor='input-text-readonly'>\n      Label\n    </label>\n    <div className='wrapper-input'>\n      <input type=\"text\" className=\"display-block input\" name=\"input-text-readonly\" id=\"input-text-readonly\" value=\"Readonly field\" placeholder=\"Placeholder\" readOnly />\n    </div>\n  </div>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-html\"\n      }}>{`  <div class='col-24'>\n    <label class='display-block' for='input-text'>\n      Label\n    </label>\n    <div class='wrapper-input'>\n      <input\n        type=\"text\"\n        class=\"display-block input\"\n        name=\"input-text-readonly\"\n        id=\"input-text-readonly\"\n        value=\"Readonly field\"\n        placeholder=\"Placeholder\"\n        readonly\n      />\n    </div>\n  </div>\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"disabled\"\n    }}>{`Disabled`}</h2>\n    <p>{`An input field can show that it is disabled. Add `}<inlineCode parentName=\"p\">{`disabled`}</inlineCode>{` attribute/class on input.`}</p>\n  <div className='col-sm-24 col-md-12 col-lg-8'>\n    <label className='display-block' htmlFor='input-text-disabled'>\n      Label\n    </label>\n    <div className='wrapper-input'>\n      <input className='display-block input' type='text' name='input-text-disabled' id='input-text-disabled' placeholder='Placeholder' disabled />\n    </div>\n  </div>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-html\"\n      }}>{`  <div class='col-24'>\n    <label class='display-block' for='input-text'>\n      Label\n    </label>\n    <div class='wrapper-input'>\n      <input\n        class='display-block input'\n        type='text'\n        name='input-text'\n        id='input-text'\n        placeholder='Placeholder'\n        disabled\n      />\n    </div>\n  </div>\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}