{"version":3,"sources":["webpack:///../src/index.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","href","target","parentName","isMDXComponent"],"mappings":"2RAQaA,EAAe,Q,+LAC5B,MAAMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAHgC,WACjCC,GAEC,EADEC,EACF,iBACD,OAAO,YAACJ,EAAD,eAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,kBACE,GAAM,mBADR,mBAGA,kBACE,GAAM,WADR,WAGA,oEAC0C,iBAAGC,KAAK,0CAA0CC,OAAO,UAAzD,SAE1C,uBAAK,oBAAMC,WAAW,MAClB,UAAa,kBADZ,sCAIL,2CAA0B,0BAAYA,WAAW,KAAvB,2BAA1B,mBAAiH,0BAAYA,WAAW,KAAvB,yBAAjH,iGAC0D,0BAAYA,WAAW,KAAvB,eAD1D,8BACgJ,0BAAYA,WAAW,KAAvB,iBADhJ,OACiN,0BAAYA,WAAW,KAAvB,cACjN,uBAAK,oBAAMA,WAAW,MAClB,UAAa,iBADZ,oOAaL,kBACE,GAAM,mBADR,mBAGA,wCAAuB,0BAAYA,WAAW,KAAvB,eAAvB,+BACA,sBACE,kBAAIA,WAAW,MAAf,OAA4B,0BAAYA,WAAW,MAAvB,OAA5B,QAAqF,0BAAYA,WAAW,MAAvB,MAArF,kBAAuJ,0BAAYA,WAAW,MAAvB,kBAEzJ,uBAAK,oBAAMA,WAAW,MAClB,UAAa,eADZ,oaAyBL,kBACE,MAAS,GAET,kBAAIA,WAAW,MAAf,eAAoC,0BAAYA,WAAW,MAAvB,cAApC,eAEF,uBAAK,oBAAMA,WAAW,MAClB,UAAa,iBADZ,uJAOL,qNAEA,kBACE,GAAM,mBADR,oBAGA,0EACA,uBAAK,oBAAMA,WAAW,MAClB,UAAa,iBADZ,0KAOL,oCAAmB,0BAAYA,WAAW,KAAvB,mBAAnB,sBACA,uBAAK,oBAAMA,WAAW,MAClB,UAAa,eADZ,oGAML,qNAEA,kBACE,GAAM,iBADR,kBAGA,mC,6LAKJN,EAAWO,gBAAiB","file":"component---src-index-mdx-9bbf3899036b563a77f8.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/vinimarcili/dev/Squid/css/src/docs/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"getting-started\"\n    }}>{`Getting Started`}</h1>\n    <h2 {...{\n      \"id\": \"install\"\n    }}>{`Install`}</h2>\n    <p>\n  You can easily install with npm or download <a href='https://github.com/squidit/css/releases' target='_blank'>here</a>\n    </p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`npm install @squidit/css --save\n`}</code></pre>\n    <p>{`Just reference CSS `}<inlineCode parentName=\"p\">{`/dist/css/squid.min.css`}</inlineCode>{` and Javascript `}<inlineCode parentName=\"p\">{`/dist/js/squid.min.js`}</inlineCode>{` on your page or your framework.\nIf necessary remember to declare the fonts contained in the `}<inlineCode parentName=\"p\">{`/dist/fonts`}</inlineCode>{` folder or change paths on `}<inlineCode parentName=\"p\">{`squid.min.css`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`squid.css`}</inlineCode></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-html\"\n      }}>{`<html>\n  <head>\n    ...\n    <link rel=\"stylesheet\" href=\"path-to-files/dist/css/squid.min.css\">\n  </head>\n  <body>\n    ...\n    <script defer src='path-to-files/dist/js/squid.min.js'></script>\n  </body>\n</html>\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"angular-install\"\n    }}>{`Angular Install`}</h2>\n    <p>{`After using the `}<inlineCode parentName=\"p\">{`npm install`}</inlineCode>{` command, do the following:`}</p>\n    <ol>\n      <li parentName=\"ol\">{`Add `}<inlineCode parentName=\"li\">{`css`}</inlineCode>{` and `}<inlineCode parentName=\"li\">{`js`}</inlineCode>{` files to your `}<inlineCode parentName=\"li\">{`angular.json`}</inlineCode></li>\n    </ol>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`{\n  ...,\n  \"assets\": [\n    // This object inside assets Array\n    {\n      \"glob\": \"**/*\",\n      \"input\": \"./node_modules/@squidit/css/dist/fonts\",\n      // Output fonts\n      \"output\": \"./assets/fonts\"\n    },\n     // Default assets\n    \"src/assets\"\n  ],\n  \"styles\": [\n    \"src/styles.scss\"\n  ],\n  // JS includes\n  \"scripts\": [\n    \"node_modules/@squidit/css/dist/js/squid.min.js\"\n  ],\n  ...\n}\n`}</code></pre>\n    <ol {...{\n      \"start\": 2\n    }}>\n      <li parentName=\"ol\">{`Add to your `}<inlineCode parentName=\"li\">{`style.scss`}</inlineCode>{` main file`}</li>\n    </ol>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-scss\"\n      }}>{`// Overwrite default font path\n$fontsFolderPath: '/assets/fonts';\n// Import all Framework Styles\n@import '~@squidit/css/src/scss/squid.scss';\n`}</code></pre>\n    <p>{`Obs: Probably components that need javascript will not work as they are loaded in onload event. They need some implementation within Angular.\nA library for Angular will be developed soon.`}</p>\n    <h2 {...{\n      \"id\": \"reactjs-install\"\n    }}>{`React.js Install`}</h2>\n    <p>{`After install, import CSS into your global style:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-scss\"\n      }}>{`  // Overwrite default font path\n  $fontsFolderPath: '~@squidit/css/dist/fonts';\n  // Import all Framework Styles\n  @import '~@squidit/css/src/scss/squid.scss';\n`}</code></pre>\n    <p>{`And in your `}<inlineCode parentName=\"p\">{`index.{jsx,tsx}`}</inlineCode>{` on root just add:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`  if (typeof window !== 'undefined') {\n    require('@squidit/css/dist/js/squid.min.js')\n  }\n`}</code></pre>\n    <p>{`Obs: Probably components that need javascript will not work as they are loaded in onload event. They need some implementation within Angular.\nA library for Angular will be developed soon.`}</p>\n    <h2 {...{\n      \"id\": \"vuejs-install\"\n    }}>{`Vue.js Install`}</h2>\n    <p>{`Soon`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}