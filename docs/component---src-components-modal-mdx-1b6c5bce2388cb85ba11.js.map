{"version":3,"sources":["webpack:///../src/components/modal.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","className","type","data-modal","id","data-backdrop","parentName","isMDXComponent"],"mappings":"yRAQaA,EAAe,Q,0MAC5B,MAAMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAHgC,WACjCC,GAEC,EADEC,EACF,iBACD,OAAO,YAACJ,EAAD,eAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,kBACE,GAAM,SADR,SAGA,8IACA,mBAAKC,UAAU,aACjB,uCADE,yCAC8D,oBAAMA,UAAU,QAAhB,YAD9D,4BAGA,mBAAKA,UAAU,aACjB,2CADE,oRAGA,sBAAQC,KAAK,SAASD,UAAU,0BAA0BE,aAAW,iBAArE,QAGA,mBAAKF,UAAU,2BAA2BG,GAAG,gBAAgBC,gBAAc,UAC7E,mBAAKJ,UAAU,yBACb,mBAAKA,UAAU,iBACb,mBAAKA,UAAU,gBACb,kBAAIA,UAAU,OAAd,eACA,sBAAQA,UAAU,2BAChB,iBAAGA,UAAU,mBAGjB,mBAAKA,UAAU,cACb,uCAIF,mBAAKA,UAAU,gBACb,sBAAQA,UAAU,6CAAlB,SAGA,sBAAQA,UAAU,sBAAlB,cAOJ,uBAAK,oBAAMK,WAAW,MAClB,UAAa,iBADZ,wrBA+BL,kBACE,GAAM,eADR,eAGA,6DAA4C,0BAAYA,WAAW,KAAvB,iBAA5C,yGAGA,uBAAK,oBAAMA,WAAW,MAClB,UAAa,gBADZ,8C,wMAUTT,EAAWU,gBAAiB","file":"component---src-components-modal-mdx-1b6c5bce2388cb85ba11.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/vinimarcili/dev/Squid/css/src/docs/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"modal\"\n    }}>{`Modal`}</h1>\n    <p>{`JavaScript modal plugin to add dialogs to your site for lightboxes, user notifications, or completely custom content.`}</p>\n    <div className='box black'>\n  <strong>Attention</strong>: the use of the components needs the <span className='pink'>squid.js</span> included in the project\n    </div>\n    <div className='box black'>\n  <strong>Attention + 1</strong>: Probably the interaction via Javascript should not work well in SPA applications (independent of the framework React, Angular, Vuejs, etc). For now we have no implementation but we will create in the future, for now just use the styles and create your own implementation\n    </div>\n    <button type='button' className='button button-pink mb-3' data-modal=\"modal-exemple\">\n  Open\n    </button>\n    <div className=\"modal align-items-center\" id=\"modal-exemple\" data-backdrop=\"static\">\n  <div className=\"modal-dialog modal-md\">\n    <div className='modal-content'>\n      <div className='modal-header'>\n        <h5 className='m-0'>Modal Title</h5>\n        <button className=\"button-close modal-exit\">\n          <i className=\"far fa-times\"></i>\n        </button>\n      </div>\n      <div className='modal-body'>\n        <p>\n          Content Modal\n        </p>\n      </div>\n      <div className='modal-footer'>\n        <button className='button button-white black mr-3 modal-exit'>\n          Close\n        </button>\n        <button className='button button-pink'>\n          Button\n        </button>\n      </div>\n    </div>\n  </div>\n    </div>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-html\"\n      }}>{`<button\n  type='button'\n  data-modal=\"modal-id\"\n>\n  <!-- Button content, data-modal must reference the \\`id\\` attribute of the modal -->\n</button>\n<div\n  class=\"modal\"\n  id=\"modal-id\"\n  data-backdrop=\"static\"\n>\n  <div class=\"modal-dialog\">\n    <div class='modal-content'>\n      <div class='modal-header'>\n        <!-- Modal Title -->\n        <button class=\"button-close modal-exit\">\n          <i class=\"far fa-times\"></i>\n        </button>\n      </div>\n      <div class='modal-body'>\n        <!-- Modal Content -->\n      </div>\n      <div class='modal-footer'>\n        <!-- Modal Footer -->\n      </div>\n    </div>\n  </div>\n</div>\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"modal-sizes\"\n    }}>{`Modal Sizes`}</h2>\n    <p>{`Just add one of the classes below to `}<inlineCode parentName=\"p\">{`.modal-dialog`}</inlineCode>{`.\nIf no size class is passed, the modal will be the full size of the screen.\nWhere value is one of:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-css\"\n      }}>{`.modal-sm,\n.modal-md,\n.modal-lg\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}