(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{kyCw:function(e,a,s){"use strict";s.r(a),s.d(a,"_frontmatter",(function(){return o})),s.d(a,"default",(function(){return d}));var n=s("Fcif"),t=s("dV/x"),l=(s("mXGw"),s("/FXl")),r=s("TjRS");s("aD51");const i=["components"],o={};void 0!==o&&o&&o===Object(o)&&Object.isExtensible(o)&&!Object.prototype.hasOwnProperty.call(o,"__filemeta")&&Object.defineProperty(o,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"src/components/loader.mdx"}});const c={_frontmatter:o},b=r.a;function d(e){let{components:a}=e,s=Object(t.a)(e,i);return Object(l.b)(b,Object(n.a)({},c,s,{components:a,mdxType:"MDXLayout"}),Object(l.b)("h1",{id:"loader"},"Loader"),Object(l.b)("p",null,"Indicate the loading state of a component or page, built entirely with HTML and CSS."),Object(l.b)("p",null,"To see all the colors and their variations go to the ",Object(l.b)("a",{className:"pink",href:"/styleguide"},"Styleguide page")),Object(l.b)("h2",{id:"default--spinner"},"Default | Spinner"),Object(l.b)("p",null,"To change color just change the ",Object(l.b)("inlineCode",{parentName:"p"},"border")," classes and to change size use ",Object(l.b)("inlineCode",{parentName:"p"},"small"),", ",Object(l.b)("inlineCode",{parentName:"p"},"big")," or ",Object(l.b)("inlineCode",{parentName:"p"},"bigger"),". Without size classes the size is default ",Object(l.b)("inlineCode",{parentName:"p"},"2rem"),"."),Object(l.b)("div",{className:"loader small mb-3 display-block",role:"status"},Object(l.b)("span",{className:"visually-hidden"},"Loading...")),Object(l.b)("div",{className:"loader mb-3 display-block",role:"status"},Object(l.b)("span",{className:"visually-hidden"},"Loading...")),Object(l.b)("div",{className:"loader big border-lilac mb-3 display-block",role:"status"},Object(l.b)("span",{className:"visually-hidden"},"Loading...")),Object(l.b)("div",{className:"loader bigger border-lilac mb-3 display-block",role:"status"},Object(l.b)("span",{className:"visually-hidden"},"Loading...")),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-html"},'<div class="loader small" role="status">\n  <span class="visually-hidden">Loading...</span>\n</div>\n<div class="loader" role="status">\n  <span class="visually-hidden">Loading...</span>\n</div>\n<div class="loader big border-lilac" role="status">\n  <span class="visually-hidden">Loading...</span>\n</div>\n<div class="loader bigger border-lilac" role="status">\n  <span class="visually-hidden">Loading...</span>\n</div>\n')),Object(l.b)("h2",{id:"progress-bar"},"Progress Bar"),Object(l.b)("p",null,"To make the correct animation of the progress bar the ideal is to use some Javascript for progress control. Here we are using an ",Object(l.b)("inlineCode",{parentName:"p"},"animate-bar")," class just for demonstration"),Object(l.b)("div",{className:"progress"},Object(l.b)("div",{className:"progress-bar background-dashed animate-bar",role:"progressbar","aria-valuemin":"0","aria-valuemax":"100"})),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-html"},'<div class="progress">\n  <div\n    class="progress-bar background-dashed animate-bar"\n    role="progressbar"\n    aria-valuemin="0"\n    aria-valuemax="100"\n  ></div>\n</div>\n')))}void 0!==d&&d&&d===Object(d)&&Object.isExtensible(d)&&!Object.prototype.hasOwnProperty.call(d,"__filemeta")&&Object.defineProperty(d,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"src/components/loader.mdx"}}),d.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-components-loader-mdx-92253c9e6ba06718109b.js.map