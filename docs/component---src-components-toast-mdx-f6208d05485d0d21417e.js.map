{"version":3,"sources":["webpack:///../src/components/toast.mdx"],"names":["_frontmatter","Object","isExtensible","prototype","hasOwnProperty","call","defineProperty","configurable","value","name","filename","layoutProps","MDXLayout","DefaultLayout","MDXContent","_ref","components","props","_objectWithoutProperties","mdx","_extends","mdxType","className","type","onClick","Toast","show","closeButton","position","parentName","isMDXComponent"],"mappings":"kQAMO,MAAMA,EAAe,QAAG,IAAAA,UAAAC,OAAAD,IAAAC,OAAAC,aAAAF,KAAAC,OAAAE,UAAAC,eAAAC,KAAAL,EAAA,eAAAC,OAAAK,eAAAN,EAAA,cAAAO,cAAA,EAAAC,MAAA,CAAAC,KAAA,eAAAC,SAAA,8BAC/B,MAAMC,EAAc,CAClBX,gBAEIY,EAAYC,IACH,SAASC,EAAUC,GAG/B,IAHgC,WACjCC,GAEDD,EADIE,EAAKC,YAAAH,EAAA,gBAER,OAAOI,YAACP,EAASQ,YAAA,GAAKT,EAAiBM,EAAK,CAAED,WAAYA,EAAYK,QAAQ,cAG5EF,YAAA,MACE,GAAM,SAAO,SAEfA,YAAA,sJAEAA,YAAA,OAAKG,UAAU,OACjBH,YAAA,cAAQ,aAAkB,yCAAsCA,YAAA,QAAMG,UAAU,QAAO,YAAe,4BAEpGH,YAAA,OAAKG,UAAU,OACjBH,YAAA,cAAQ,iBAAsB,iJAE5BA,YAAA,MACE,GAAM,WAAS,WAEjBA,YAAA,UAAQI,KAAK,SAASD,UAAU,gCAAgCE,QAASA,IAAMC,MAAMC,KAAK,cAAe,CACvGC,aAAa,EACbC,SAAU,YACVN,UAAW,MACT,cAGJH,YAAA,WAAKA,YAAA,QAAMU,WAAW,MAClB,UAAa,iBAAe,0KAQhCV,YAAA,MACE,GAAM,SAAO,SAEfA,YAAA,mDAA8CA,YAAA,cAAYU,WAAW,KAAG,sBAAoC,KAAMV,YAAA,cAAYU,WAAW,KAAG,oBAAkC,sBAC9KV,YAAA,WAAKA,YAAA,QAAMU,WAAW,OAAK,wEAS3BV,YAAA,MACE,GAAM,YAAU,YAElBA,YAAA,oCAA+BA,YAAA,cAAYU,WAAW,KAAG,YAA0B,cACnFV,YAAA,WAAKA,YAAA,QAAMU,WAAW,OAAK,+BAK3BV,YAAA,MACE,GAAM,aAAW,aAEnBA,YAAA,SAAGA,YAAA,cAAYU,WAAW,KAAG,aAA2B,sEACxDV,YAAA,MACE,GAAM,eAAa,eAErBA,YAAA,+DAA0DA,YAAA,cAAYU,WAAW,KAAG,sBACpFV,YAAA,MACE,GAAM,QAAM,QAEdA,YAAA,yBAAoBA,YAAA,cAAYU,WAAW,KAAG,SAAuB,QAASV,YAAA,cAAYU,WAAW,KAAG,QAAsB,OAAQV,YAAA,cAAYU,WAAW,KAAG,aAA2B,cAC3LV,YAAA,MACE,GAAM,WAAS,WAEjBA,YAAA,iBAAYA,YAAA,cAAYU,WAAW,KAAG,WAAyB,+CAAgDV,YAAA,cAAYU,WAAW,KAAG,sBAAoC,sCAGhL,IAAAf,UAAAb,OAAAa,IAAAb,OAAAC,aAAAY,KAAAb,OAAAE,UAAAC,eAAAC,KAAAS,EAAA,eAAAb,OAAAK,eAAAQ,EAAA,cAAAP,cAAA,EAAAC,MAAA,CAAAC,KAAA,aAAAC,SAAA,8BAEDI,EAAWgB,gBAAiB","file":"component---src-components-toast-mdx-f6208d05485d0d21417e.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/home/runner/work/css/css/src/docs/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"toast\"\n    }}>{`Toast`}</h1>\n    <p>{`Push notifications to your visitors with a toast, a lightweight and easily customizable alert message.\nToast works as a reactive service`}</p>\n    <div className='box'>\n  <strong>Attention</strong>: the use of the components needs the <span className='pink'>squid.js</span> included in the project\n    </div>\n    <div className='box'>\n  <strong>Attention + 1</strong>: Probably the interaction via Javascript should not work well in SPA applications needs some implementation to acess Toast on window element\n    </div>\n    <h2 {...{\n      \"id\": \"exemple\"\n    }}>{`Exemple`}</h2>\n    <button type='button' className='button inverted button-black ' onClick={() => Toast.show(\"Hello world\", {\n      closeButton: true,\n      position: \"top right\",\n      className: \"\"\n    })}>\n  Click here\n    </button>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-html\"\n      }}>{`<button\n  type='button'\n  on-click='() => Toast.show(\"Hello world\", { closeButton: true, position: \"top right\", className: \"\" })'\n>\n  Click here\n</button>\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"types\"\n    }}>{`Types`}</h2>\n    <p>{`Toast has standard types, to call like `}<inlineCode parentName=\"p\">{`Toast.success(...)`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`Toast.error(...)`}</inlineCode>{`, etc... They are:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`show\ninverted\nsuccess\nwarning\nerror\ngrayscale\ncustom\ntheme\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"position\"\n    }}>{`Position`}</h2>\n    <p>{`Combine these values on `}<inlineCode parentName=\"p\">{`position`}</inlineCode>{` attribute`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`top\nbottom\nleft\nright\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"classname\"\n    }}>{`ClassName`}</h2>\n    <p><inlineCode parentName=\"p\">{`className`}</inlineCode>{` accepet a string that add a class to tooltip container on show it`}</p>\n    <h2 {...{\n      \"id\": \"closebutton\"\n    }}>{`CloseButton`}</h2>\n    <p>{`Boolean value to show or not close button. Default `}<inlineCode parentName=\"p\">{`closeButton: true`}</inlineCode></p>\n    <h2 {...{\n      \"id\": \"full\"\n    }}>{`Full`}</h2>\n    <p>{`To Toast use `}<inlineCode parentName=\"p\">{`100vw`}</inlineCode>{` add `}<inlineCode parentName=\"p\">{`full`}</inlineCode>{` to `}<inlineCode parentName=\"p\">{`className`}</inlineCode>{` attribute`}</p>\n    <h2 {...{\n      \"id\": \"onclick\"\n    }}>{`onClick`}</h2>\n    <p>{`Pass `}<inlineCode parentName=\"p\">{`onClick`}</inlineCode>{` (with a function) atribute combinated with `}<inlineCode parentName=\"p\">{`notOverClick: true`}</inlineCode>{` to do a custom action click`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}