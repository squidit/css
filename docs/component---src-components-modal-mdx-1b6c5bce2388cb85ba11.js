(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{dXDT:function(e,t,a){"use strict";a.r(t),a.d(t,"_frontmatter",(function(){return d})),a.d(t,"default",(function(){return m}));var n=a("Fcif"),o=a("dV/x"),l=(a("mXGw"),a("/FXl")),s=a("TjRS");a("aD51");const c=["components"],d={};void 0!==d&&d&&d===Object(d)&&Object.isExtensible(d)&&!d.hasOwnProperty("__filemeta")&&Object.defineProperty(d,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"src/components/modal.mdx"}});const i={_frontmatter:d},b=s.a;function m(e){let{components:t}=e,a=Object(o.a)(e,c);return Object(l.b)(b,Object(n.a)({},i,a,{components:t,mdxType:"MDXLayout"}),Object(l.b)("h1",{id:"modal"},"Modal"),Object(l.b)("p",null,"JavaScript modal plugin to add dialogs to your site for lightboxes, user notifications, or completely custom content."),Object(l.b)("div",{className:"box black"},Object(l.b)("strong",null,"Attention"),": the use of the components needs the ",Object(l.b)("span",{className:"pink"},"squid.js")," included in the project"),Object(l.b)("div",{className:"box black"},Object(l.b)("strong",null,"Attention + 1"),": Probably the interaction via Javascript should not work well in SPA applications (independent of the framework React, Angular, Vuejs, etc). For now we have no implementation but we will create in the future, for now just use the styles and create your own implementation"),Object(l.b)("button",{type:"button",className:"button button-pink mb-3","data-modal":"modal-exemple"},"Open"),Object(l.b)("div",{className:"modal align-items-center",id:"modal-exemple","data-backdrop":"static"},Object(l.b)("div",{className:"modal-dialog modal-md"},Object(l.b)("div",{className:"modal-content"},Object(l.b)("div",{className:"modal-header"},Object(l.b)("h5",{className:"m-0"},"Modal Title"),Object(l.b)("button",{className:"button-close modal-exit"},Object(l.b)("i",{className:"far fa-times"}))),Object(l.b)("div",{className:"modal-body"},Object(l.b)("p",null,"Content Modal")),Object(l.b)("div",{className:"modal-footer"},Object(l.b)("button",{className:"button button-white black mr-3 modal-exit"},"Close"),Object(l.b)("button",{className:"button button-pink"},"Button"))))),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-html"},'<button\n  type=\'button\'\n  data-modal="modal-id"\n>\n  \x3c!-- Button content, data-modal must reference the `id` attribute of the modal --\x3e\n</button>\n<div\n  class="modal"\n  id="modal-id"\n  data-backdrop="static"\n>\n  <div class="modal-dialog">\n    <div class=\'modal-content\'>\n      <div class=\'modal-header\'>\n        \x3c!-- Modal Title --\x3e\n        <button class="button-close modal-exit">\n          <i class="far fa-times"></i>\n        </button>\n      </div>\n      <div class=\'modal-body\'>\n        \x3c!-- Modal Content --\x3e\n      </div>\n      <div class=\'modal-footer\'>\n        \x3c!-- Modal Footer --\x3e\n      </div>\n    </div>\n  </div>\n</div>\n')),Object(l.b)("h2",{id:"modal-sizes"},"Modal Sizes"),Object(l.b)("p",null,"Just add one of the classes below to ",Object(l.b)("inlineCode",{parentName:"p"},".modal-dialog"),".\nIf no size class is passed, the modal will be the full size of the screen.\nWhere value is one of:"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-css"},".modal-sm,\n.modal-md,\n.modal-lg\n")))}void 0!==m&&m&&m===Object(m)&&Object.isExtensible(m)&&!m.hasOwnProperty("__filemeta")&&Object.defineProperty(m,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"src/components/modal.mdx"}}),m.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-components-modal-mdx-1b6c5bce2388cb85ba11.js.map