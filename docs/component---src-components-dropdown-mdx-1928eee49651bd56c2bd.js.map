{"version":3,"sources":["webpack:///../src/components/dropdown.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","className","style","type","data-dropdown","href","onClick","htmlFor","name","id","placeholder","isMDXComponent"],"mappings":"yRAQaA,EAAe,Q,6MAC5B,MAAMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAHgC,WACjCC,GAEC,EADEC,EACF,iBACD,OAAO,YAACJ,EAAD,eAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,kBACE,GAAM,YADR,YAGA,mJAAkI,0BAAYC,WAAW,KAAvB,0BAAlI,SAA8M,0BAAYA,WAAW,KAAvB,sCAC9M,mBAAKC,UAAU,aACjB,uCADE,yCAC8D,oBAAMA,UAAU,QAAhB,YAD9D,4BAGA,mBAAKA,UAAU,aACjB,2CADE,oRAGA,sBAAQA,UAAU,wCAAwCC,MAAO,CAC/D,MAAS,SACRC,KAAK,SAASC,iBAAA,GAFjB,cAGS,iBAAGH,UAAU,yBAEtB,kBAAIA,UAAU,YAChB,sBACE,iBAAGI,KAAK,IAAIC,QAAS,KAAM,GAA3B,SAIF,kBAAIL,UAAU,aAAd,eAGA,kBAAIA,UAAU,QACZ,qBAAOM,QAAQ,uBAAf,SAGA,qBAAOL,MAAO,CACR,MAAS,QACRD,UAAU,sBAAsBE,KAAK,OAAOK,KAAK,sBAAsBC,GAAG,sBAAsBC,YAAY,iBAErH,sBACE,kBAAIT,UAAU,sBAEhB,sBACE,sBAAQE,KAAK,SAASG,QAAS,KAAM,GAArC,WAIF,sBACE,mBAAKL,UAAU,kBACb,8CAGA,+CAMF,uBAAK,oBAAMD,WAAW,MAClB,UAAa,iBADZ,siB,2MA4BTJ,EAAWe,gBAAiB","file":"component---src-components-dropdown-mdx-1928eee49651bd56c2bd.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/vinimarcili/dev/Squid/css/src/docs/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"dropdown\"\n    }}>{`Dropdown`}</h1>\n    <p>{`Toggle contextual overlays for displaying lists of links and more. To change the opening direction, just add the attribute `}<inlineCode parentName=\"p\">{`data-dropdown-position`}</inlineCode>{` like `}<inlineCode parentName=\"p\">{`data-dropdown-position='left top'`}</inlineCode></p>\n    <div className='box black'>\n  <strong>Attention</strong>: the use of the components needs the <span className='pink'>squid.js</span> included in the project\n    </div>\n    <div className='box black'>\n  <strong>Attention + 1</strong>: Probably the interaction via Javascript should not work well in SPA applications (independent of the framework React, Angular, Vuejs, etc). For now we have no implementation but we will create in the future, for now just use the styles and create your own implementation\n    </div>\n    <button className=\"button button-pink mb-3 display-block\" style={{\n      \"width\": \"200px\"\n    }} type=\"button\" data-dropdown>\n  Click Here <i className=\"far fa-chevron-down\"></i>\n    </button>\n    <ul className=\"dropdown\">\n  <li>\n    <a href=\"#\" onClick={() => false}>\n      Link\n    </a>\n  </li>\n  <li className='px-3 mb-3'>\n    Sample Text\n  </li>\n  <li className='px-3'>\n    <label htmlFor='input-text-dropdown'>\n      Label\n    </label>\n    <input style={{\n          \"width\": \"100%\"\n        }} className='display-block input' type='text' name='input-text-dropdown' id='input-text-dropdown' placeholder='Placeholder' />\n  </li>\n  <li>\n    <hr className=\"dropdown-divider\" />\n  </li>\n  <li>\n    <button type='button' onClick={() => false}>\n      Button\n    </button>\n  </li>\n  <li>\n    <div className='dropdown-plain'>\n      <h6>\n        I`m a plain dropdown\n      </h6>\n      <p>\n        This is a paragraph\n      </p>\n    </div>\n  </li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-html\"\n      }}>{`<button\n  type=\"button\"\n  data-dropdown\n>\n  <!-- Button content data-dropdown is required -->\n  <!-- data-dropdown-position to change where dropdown if opened. Values: right bottom, right top, left bottom, left top -->\n</button>\n<ul class=\"dropdown\">\n  <li>\n    <!-- Common Item Like <a> or <button> or forms -->\n  </li>\n  <li>\n    <!-- Custom HR -->\n    <hr class=\"dropdown-divider\" />\n  </li>\n  <li>\n    <div class='dropdown-plain'>\n      <!-- Plain HTML -->\n    </div>\n  </li>\n</ul>\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}