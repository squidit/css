(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{k8IL:function(e,t,n){"use strict";n.r(t),n.d(t,"_frontmatter",(function(){return l})),n.d(t,"default",(function(){return d}));var o=n("Fcif"),a=n("dV/x"),r=(n("mXGw"),n("/FXl")),c=n("TjRS");n("aD51");const b=["components"],l={};void 0!==l&&l&&l===Object(l)&&Object.isExtensible(l)&&!Object.prototype.hasOwnProperty.call(l,"__filemeta")&&Object.defineProperty(l,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"src/content/dark-mode.mdx"}});const s={_frontmatter:l},i=c.a;function d(e){let{components:t}=e,n=Object(a.a)(e,b);return Object(r.b)(i,Object(o.a)({},s,n,{components:t,mdxType:"MDXLayout"}),Object(r.b)("h1",{id:"dark-mode"},"Dark Mode"),Object(r.b)("p",null,"We bring already configured a theme of dark mode.\nThe exchange of variables is done in two situations:"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},"By user's browser preference"),Object(r.b)("li",{parentName:"ol"},"With a class in the body")),Object(r.b)("h2",{id:"1-by-users-browser-preference"},"1. By user's browser preference"),Object(r.b)("p",null,"The user doesn't need to do anything, the change will be done automatically according to the ",Object(r.b)("inlineCode",{parentName:"p"},"prefers-color-scheme")," css rule"),Object(r.b)("h2",{id:"2-with-a-class-in-the-body"},"2. With a class in the body"),Object(r.b)("p",null,"If there is a need to lock this automatic switch or make a theme selector for the user, just add a class in the body for their respective themes:"),Object(r.b)("blockquote",null,Object(r.b)("p",{parentName:"blockquote"},"To dark mode")),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-html"},'<html>\n  ...\n  <body class="dark">\n    ...\n  </body>\n</html\n')),Object(r.b)("blockquote",null,Object(r.b)("p",{parentName:"blockquote"},"To light mode")),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-html"},'<html>\n  ...\n  <body class="light">\n    ...\n  </body>\n</html\n')),Object(r.b)("h2",{id:"variables"},"Variables"),Object(r.b)("p",null,"List of variables that change with the change of theme if there is a need to use it in a custom component, these are the variables changed in the change of the theme that reflect in all the components of the framework"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre"},"  --background\n  --background_secondary\n  --text_color\n  --background_third\n  --shadow_color\n  --box_shadow\n  --border_color\n")))}void 0!==d&&d&&d===Object(d)&&Object.isExtensible(d)&&!Object.prototype.hasOwnProperty.call(d,"__filemeta")&&Object.defineProperty(d,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"src/content/dark-mode.mdx"}}),d.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-content-dark-mode-mdx-4df77872ca9a5f7eae9b.js.map