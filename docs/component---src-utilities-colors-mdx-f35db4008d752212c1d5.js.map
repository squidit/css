{"version":3,"sources":["webpack:///../src/utilities/colors.mdx"],"names":["_frontmatter","Object","isExtensible","prototype","hasOwnProperty","call","defineProperty","configurable","value","name","filename","layoutProps","MDXLayout","DefaultLayout","MDXContent","_ref","components","props","_objectWithoutProperties","mdx","_extends","mdxType","parentName","className","href","style","isMDXComponent"],"mappings":"kQAMO,MAAMA,EAAe,QAAG,IAAAA,UAAAC,OAAAD,IAAAC,OAAAC,aAAAF,KAAAC,OAAAE,UAAAC,eAAAC,KAAAL,EAAA,eAAAC,OAAAK,eAAAN,EAAA,cAAAO,cAAA,EAAAC,MAAA,CAAAC,KAAA,eAAAC,SAAA,8BAC/B,MAAMC,EAAc,CAClBX,gBAEIY,EAAYC,IACH,SAASC,EAAUC,GAG/B,IAHgC,WACjCC,GAEDD,EADIE,EAAKC,YAAAH,EAAA,gBAER,OAAOI,YAACP,EAASQ,YAAA,GAAKT,EAAiBM,EAAK,CAAED,WAAYA,EAAYK,QAAQ,cAG5EF,YAAA,MACE,GAAM,UAAQ,UAEhBA,YAAA,mEAA8DA,YAAA,WAAM,0DACjBA,YAAA,cAAYG,WAAW,KAAG,YAA0B,iDAAkDH,YAAA,cAAYG,WAAW,KAAG,kBAAgC,KACnNH,YAAA,SAAG,wDAAqDA,YAAA,KAAGI,UAAU,OAAOC,KAAK,eAAc,oBAC/FL,YAAA,KAAGI,UAAU,QAAO,uHACpBJ,YAAA,MACE,GAAM,mBAAiB,mBAEzBA,YAAA,0BAAqBA,YAAA,cAAYG,WAAW,KAAG,SAAuB,2CACtEH,YAAA,KAAGI,UAAU,WAAU,8CAGvBJ,YAAA,KAAGI,UAAU,WAAU,sDAGvBJ,YAAA,KAAGI,UAAU,WAAU,8CAGvBJ,YAAA,WAAKA,YAAA,QAAMG,WAAW,MAClB,UAAa,iBAAe,wOAWhCH,YAAA,MACE,GAAM,8BAA4B,8BAEpCA,YAAA,0BAAqBA,YAAA,cAAYG,WAAW,KAAG,oBAAkC,0DAA2DH,YAAA,cAAYG,WAAW,KAAG,eAA6B,KACnMH,YAAA,KAAGI,UAAU,qCAAoC,8DAGjDJ,YAAA,KAAGI,UAAU,qCAAoC,sEAGjDJ,YAAA,KAAGI,UAAU,qCAAoC,8DAGjDJ,YAAA,WAAKA,YAAA,QAAMG,WAAW,MAClB,UAAa,iBAAe,yTAWhCH,YAAA,MACE,GAAM,0BAAwB,0BAEhCA,YAAA,0BAAqBA,YAAA,cAAYG,WAAW,KAAG,gBAA8B,0DAA2DH,YAAA,cAAYG,WAAW,KAAG,WAAyB,oCAC/JH,YAAA,cAAYG,WAAW,KAAG,UAAwB,6CAA8CH,YAAA,cAAYG,WAAW,KAAG,iCAA+C,UACnMH,YAAA,cAAYG,WAAW,KAAG,eAA6B,4CACzDH,YAAA,KAAGI,UAAU,qBAAqBE,MAAO,CACvC,OAAU,0BACT,0DAGHN,YAAA,KAAGI,UAAU,qBAAqBE,MAAO,CACvC,OAAU,0BACT,kEAGHN,YAAA,KAAGI,UAAU,qBAAqBE,MAAO,CACvC,OAAU,0BACT,0DAGHN,YAAA,WAAKA,YAAA,QAAMG,WAAW,MAClB,UAAa,iBAAe,yZAanC,IAAAR,UAAAb,OAAAa,IAAAb,OAAAC,aAAAY,KAAAb,OAAAE,UAAAC,eAAAC,KAAAS,EAAA,eAAAb,OAAAK,eAAAQ,EAAA,cAAAP,cAAA,EAAAC,MAAA,CAAAC,KAAA,aAAAC,SAAA,8BAEDI,EAAWY,gBAAiB","file":"component---src-utilities-colors-mdx-f35db4008d752212c1d5.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/home/runner/work/css/css/src/docs/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"colors\"\n    }}>{`Colors`}</h1>\n    <p>{`We use a relatively extensive set of cores within CSS. `}<br />{`\nAll colors in addition to being SASS variables (like `}<inlineCode parentName=\"p\">{`$pink-50`}</inlineCode>{`) are also CSS variables to use globally like `}<inlineCode parentName=\"p\">{`var(--pink-50)`}</inlineCode>{`.`}</p>\n    <p>To see all the colors and their variations go to the <a className='pink' href='/styleguide'>Styleguide page</a></p>\n    <p className='mb-3'>All colors have tone variations from 5 to 95, jumping every 5 like var(--pink-5), var(--pink-10), var(--pink-15)...</p>\n    <h2 {...{\n      \"id\": \"color-attribute\"\n    }}>{`Color Attribute`}</h2>\n    <p>{`To change the `}<inlineCode parentName=\"p\">{`color`}</inlineCode>{` rule just use the color name as class.`}</p>\n    <p className='pink-50'>\n  I`m a pink paragraph like 'var(--pink-50)'\n    </p>\n    <p className='pink-30'>\n  I`m a lighter pink paragraph like 'var(--pink-30)'\n    </p>\n    <p className='aqua-50'>\n  I`m a aqua paragraph like 'var(--aqua-30)'\n    </p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-html\"\n      }}>{`<p class='pink-50'>\n  I\\`m a pink paragraph like 'var(--pink-50)'\n</p>\n<p class='pink-30'>\n  I\\`m a lighter pink paragraph like 'var(--pink-30)'\n</p>\n<p class='aqua-50'>\n  I\\`m a aqua paragraph like 'var(--aqua-30)'\n</p>\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"background-color-attribute\"\n    }}>{`Background Color Attribute`}</h2>\n    <p>{`To change the `}<inlineCode parentName=\"p\">{`background-color`}</inlineCode>{` rule just use the color name as class with the prefix `}<inlineCode parentName=\"p\">{`background-`}</inlineCode>{`.`}</p>\n    <p className='background-pink-50 white-html p-2'>\n  I`m a paragraph with background pink like 'var(--pink-50)'\n    </p>\n    <p className='background-pink-30 white-html p-2'>\n  I`m a paragraph with lighter background pink like 'var(--pink-30)'\n    </p>\n    <p className='background-aqua-50 white-html p-2'>\n  I`m a paragraph with background aqua like 'var(--aqua-30)'\n    </p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-html\"\n      }}>{`<p class='background-pink-50'>\n  I\\`m a paragraph with background pink like 'var(--pink-50)'\n</p>\n<p class='background-pink-30'>\n  I\\`m a paragraph with lighter background pink like 'var(--pink-30)'\n</p>\n<p class='background-aqua-50'>\n  I\\`m a paragraph with background aqua like 'var(--aqua-30)'\n</p>\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"border-color-attribute\"\n    }}>{`Border Color Attribute`}</h2>\n    <p>{`To change the `}<inlineCode parentName=\"p\">{`border-color`}</inlineCode>{` rule just use the color name as class with the prefix `}<inlineCode parentName=\"p\">{`border-`}</inlineCode>{`.\nThe element needs to have the `}<inlineCode parentName=\"p\">{`border`}</inlineCode>{` property set, the example below is using `}<inlineCode parentName=\"p\">{`border: 1px solid transparent`}</inlineCode>{`.\nThe `}<inlineCode parentName=\"p\">{`transparent`}</inlineCode>{` will be overwritten by the color class.`}</p>\n    <p className='border-pink-50 p-2' style={{\n      \"border\": \"1px solid transparent\"\n    }}>\n  I`m a paragraph with border pink like 'var(--pink-50)'\n    </p>\n    <p className='border-pink-30 p-2' style={{\n      \"border\": \"1px solid transparent\"\n    }}>\n  I`m a paragraph with lighter border pink like 'var(--pink-30)'\n    </p>\n    <p className='border-aqua-50 p-2' style={{\n      \"border\": \"1px solid transparent\"\n    }}>\n  I`m a paragraph with border aqua like 'var(--aqua-30)'\n    </p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-html\"\n      }}>{`<p class='border-pink-50' style='border: 1px solid transparent'>\n  I\\`m a paragraph with border pink like 'var(--pink-50)'\n</p>\n<p class='border-pink-30' style='border: 1px solid transparent'>\n  I\\`m a paragraph with lighter border pink like 'var(--pink-30)'\n</p>\n<p class='border-aqua-50' style='border: 1px solid transparent'>\n  I\\`m a paragraph with border aqua like 'var(--aqua-30)'\n</p>\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}