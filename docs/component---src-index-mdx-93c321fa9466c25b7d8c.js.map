{"version":3,"sources":["webpack:///../src/index.mdx"],"names":["_frontmatter","Object","isExtensible","prototype","hasOwnProperty","call","defineProperty","configurable","value","name","filename","layoutProps","MDXLayout","DefaultLayout","MDXContent","_ref","components","props","_objectWithoutProperties","mdx","_extends","mdxType","href","target","parentName","isMDXComponent"],"mappings":"oQAMO,MAAMA,EAAe,QAAG,IAAAA,UAAAC,OAAAD,IAAAC,OAAAC,aAAAF,KAAAC,OAAAE,UAAAC,eAAAC,KAAAL,EAAA,eAAAC,OAAAK,eAAAN,EAAA,cAAAO,cAAA,EAAAC,MAAA,CAAAC,KAAA,eAAAC,SAAA,mBAC/B,MAAMC,EAAc,CAClBX,gBAEIY,EAAYC,IACH,SAASC,EAAUC,GAG/B,IAHgC,WACjCC,GAEDD,EADIE,EAAKC,YAAAH,EAAA,gBAER,OAAOI,YAACP,EAASQ,YAAA,GAAKT,EAAiBM,EAAK,CAAED,WAAYA,EAAYK,QAAQ,cAG5EF,YAAA,MACE,GAAM,mBAAiB,mBAEzBA,YAAA,MACE,GAAM,WAAS,WAEjBA,YAAA,SAAG,mCACHA,YAAA,SAAG,cACO,IACZA,YAAA,KAAGG,KAAK,0CAA0CC,OAAO,UAAS,SAIhEJ,YAAA,0BAAqBA,YAAA,cAAYK,WAAW,KAAG,mDAAiE,KAChHL,YAAA,mBAAcA,YAAA,cAAYK,WAAW,KAAG,kCAAgD,KACxFL,YAAA,wFACFA,YAAA,cAAYK,WAAW,KAAG,0DACxBL,YAAA,WAAKA,YAAA,QAAMK,WAAW,MAClB,UAAa,kBAAgB,sCAGjCL,YAAA,+BAA0BA,YAAA,cAAYK,WAAW,KAAG,2BAAyC,mBAAoBL,YAAA,cAAYK,WAAW,KAAG,yBAAuC,iGACxHL,YAAA,cAAYK,WAAW,KAAG,eAA6B,8BAA+BL,YAAA,cAAYK,WAAW,KAAG,iBAA+B,OAAQL,YAAA,cAAYK,WAAW,KAAG,cAC3OL,YAAA,WAAKA,YAAA,QAAMK,WAAW,MAClB,UAAa,iBAAe,oOAYhCL,YAAA,MACE,GAAM,mBAAiB,mBAEzBA,YAAA,gBAAWA,YAAA,KAAGK,WAAW,IACrB,KAAQ,sCAAoC,YAEhDL,YAAA,MACE,GAAM,mBAAiB,oBAEzBA,YAAA,8DACAA,YAAA,WAAKA,YAAA,QAAMK,WAAW,MAClB,UAAa,iBAAe,gKAMhCL,YAAA,wBAAmBA,YAAA,cAAYK,WAAW,KAAG,mBAAiC,sBAC9EL,YAAA,WAAKA,YAAA,QAAMK,WAAW,MAClB,UAAa,eAAa,+FAK9BL,YAAA,qMAEAA,YAAA,MACE,GAAM,iBAAe,kBAEvBA,YAAA,uBAGH,IAAAL,UAAAb,OAAAa,IAAAb,OAAAC,aAAAY,KAAAb,OAAAE,UAAAC,eAAAC,KAAAS,EAAA,eAAAb,OAAAK,eAAAQ,EAAA,cAAAP,cAAA,EAAAC,MAAA,CAAAC,KAAA,aAAAC,SAAA,mBAEDI,EAAWW,gBAAiB","file":"component---src-index-mdx-93c321fa9466c25b7d8c.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/home/runner/work/css/css/src/docs/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"getting-started\"\n    }}>{`Getting Started`}</h1>\n    <h2 {...{\n      \"id\": \"install\"\n    }}>{`Install`}</h2>\n    <p>You can easily install with npm</p>\n    <p>\n  or download{\" \"}\n  <a href=\"https://github.com/squidit/css/releases\" target=\"_blank\">\n    here\n  </a>\n    </p>\n    <p>{`or or use CDN `}<inlineCode parentName=\"p\">{`https://www.jsdelivr.com/package/gh/squidit/css`}</inlineCode>{`*`}</p>\n    <p>{`or use `}<inlineCode parentName=\"p\">{`https://css-cdn.squidit.com.br`}</inlineCode>{`*`}</p>\n    <p>{`-> Use the path from references above on CDN's to find the files. Exemple:\n`}<inlineCode parentName=\"p\">{`https://css-cdn.squidit.com.br/dist/css/squid.min.css`}</inlineCode></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`npm install @squidit/css --save\n`}</code></pre>\n    <p>{`Just reference CSS `}<inlineCode parentName=\"p\">{`/dist/css/squid.min.css`}</inlineCode>{` and Javascript `}<inlineCode parentName=\"p\">{`/dist/js/squid.min.js`}</inlineCode>{` on your page or your framework.\nIf necessary remember to declare the fonts contained in the `}<inlineCode parentName=\"p\">{`/dist/fonts`}</inlineCode>{` folder or change paths on `}<inlineCode parentName=\"p\">{`squid.min.css`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`squid.css`}</inlineCode></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-html\"\n      }}>{`<html>\n  <head>\n    ...\n    <link rel=\"stylesheet\" href=\"path-to-files/dist/css/squid.min.css\" />\n  </head>\n  <body>\n    ...\n    <script defer src=\"path-to-files/dist/js/squid.min.js\"></script>\n  </body>\n</html>\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"angular-install\"\n    }}>{`Angular Install`}</h2>\n    <p>{`Use `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/squidit/ngx-css\"\n      }}>{`NGX-CSS`}</a></p>\n    <h2 {...{\n      \"id\": \"reactjs-install\"\n    }}>{`React.js Install`}</h2>\n    <p>{`After install, import CSS into your global style:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-scss\"\n      }}>{`// Overwrite default font path\n$fontsFolderPath: \"@squidit/css/dist/fonts\";\n// Import all Framework Styles\n@import \"@squidit/css/src/scss/squid.scss\";\n`}</code></pre>\n    <p>{`And in your `}<inlineCode parentName=\"p\">{`index.{jsx,tsx}`}</inlineCode>{` on root just add:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`if (typeof window !== \"undefined\") {\n  require(\"@squidit/css/dist/js/squid.min.js\");\n}\n`}</code></pre>\n    <p>{`Obs: Probably components that need javascript will not work as they are loaded in onload event. They need some implementation within React.\nA library for React will be developed soon.`}</p>\n    <h2 {...{\n      \"id\": \"vuejs-install\"\n    }}>{`Vue.js Install`}</h2>\n    <p>{`Soon`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}