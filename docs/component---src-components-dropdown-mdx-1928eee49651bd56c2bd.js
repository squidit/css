(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{hSoX:function(e,t,n){"use strict";n.r(t),n.d(t,"_frontmatter",(function(){return b})),n.d(t,"default",(function(){return p}));var o=n("Fcif"),a=n("dV/x"),l=(n("mXGw"),n("/FXl")),i=n("TjRS");n("aD51");const c=["components"],b={};void 0!==b&&b&&b===Object(b)&&Object.isExtensible(b)&&!b.hasOwnProperty("__filemeta")&&Object.defineProperty(b,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"src/components/dropdown.mdx"}});const d={_frontmatter:b},r=i.a;function p(e){let{components:t}=e,n=Object(a.a)(e,c);return Object(l.b)(r,Object(o.a)({},d,n,{components:t,mdxType:"MDXLayout"}),Object(l.b)("h1",{id:"dropdown"},"Dropdown"),Object(l.b)("p",null,"Toggle contextual overlays for displaying lists of links and more. To change the opening direction, just add the attribute ",Object(l.b)("inlineCode",{parentName:"p"},"data-dropdown-position")," like ",Object(l.b)("inlineCode",{parentName:"p"},"data-dropdown-position='left top'")),Object(l.b)("div",{className:"box black"},Object(l.b)("strong",null,"Attention"),": the use of the components needs the ",Object(l.b)("span",{className:"pink"},"squid.js")," included in the project"),Object(l.b)("div",{className:"box black"},Object(l.b)("strong",null,"Attention + 1"),": Probably the interaction via Javascript should not work well in SPA applications (independent of the framework React, Angular, Vuejs, etc). For now we have no implementation but we will create in the future, for now just use the styles and create your own implementation"),Object(l.b)("button",{className:"button button-pink mb-3 display-block",style:{width:"200px"},type:"button","data-dropdown":!0},"Click Here ",Object(l.b)("i",{className:"far fa-chevron-down"})),Object(l.b)("ul",{className:"dropdown"},Object(l.b)("li",null,Object(l.b)("a",{href:"#",onClick:()=>!1},"Link")),Object(l.b)("li",{className:"px-3 mb-3"},"Sample Text"),Object(l.b)("li",{className:"px-3"},Object(l.b)("label",{htmlFor:"input-text-dropdown"},"Label"),Object(l.b)("input",{style:{width:"100%"},className:"display-block input",type:"text",name:"input-text-dropdown",id:"input-text-dropdown",placeholder:"Placeholder"})),Object(l.b)("li",null,Object(l.b)("hr",{className:"dropdown-divider"})),Object(l.b)("li",null,Object(l.b)("button",{type:"button",onClick:()=>!1},"Button")),Object(l.b)("li",null,Object(l.b)("div",{className:"dropdown-plain"},Object(l.b)("h6",null,"I`m a plain dropdown"),Object(l.b)("p",null,"This is a paragraph")))),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-html"},'<button\n  type="button"\n  data-dropdown\n>\n  \x3c!-- Button content data-dropdown is required --\x3e\n  \x3c!-- data-dropdown-position to change where dropdown if opened. Values: right bottom, right top, left bottom, left top --\x3e\n</button>\n<ul class="dropdown">\n  <li>\n    \x3c!-- Common Item Like <a> or <button> or forms --\x3e\n  </li>\n  <li>\n    \x3c!-- Custom HR --\x3e\n    <hr class="dropdown-divider" />\n  </li>\n  <li>\n    <div class=\'dropdown-plain\'>\n      \x3c!-- Plain HTML --\x3e\n    </div>\n  </li>\n</ul>\n')))}void 0!==p&&p&&p===Object(p)&&Object.isExtensible(p)&&!p.hasOwnProperty("__filemeta")&&Object.defineProperty(p,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"src/components/dropdown.mdx"}}),p.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-components-dropdown-mdx-1928eee49651bd56c2bd.js.map